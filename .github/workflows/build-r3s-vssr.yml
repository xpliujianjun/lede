name: Build NanoPi-R3S with luci-app-vssr

on:
  workflow_dispatch:   # 手动触发
  schedule:            # 每周日凌晨 3 点自动跑一次（可选）
    - cron: '0 19 * * 6'   # UTC 时间

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2204)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"

      - name: Clone Source
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: Load Custom Feeds
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          cd openwrt
          echo 'src-git kenzo https://github.com/kenzok8/small-package' >> feeds.conf.default
          ./scripts/feeds clean
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Load Custom Config
        run: |
          [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt/.config
          cd openwrt
          make defconfig

      - name: Download Package
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 V=s

      - name: Organize Files
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload Firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt-NanoPi-R3S-VSSR
          path: ${{ env.FIRMWARE }}

      - name: Release
        uses: ncipollo/release-action@v1
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          tag: ${{ github.run_number }}
          artifacts: ${{ env.FIRMWARE }}/*
